{"version":3,"sources":["gqlQueries.js","Components/CourseScreen.js","Components/GoalsScreen.js","Components/GradeScreen.js","Components/MTaskOverview.js","Components/Mission.js","Components/Text.js","Components/Image.js","Components/Video.js","Components/ProgressBar.js","Components/MCQuestion.js","Components/FRQuestion.js","Components/Task.js","App.js","reportWebVitals.js","index.js"],"names":["GET_ALL_COURSES","gql","ADD_COURSE","DELETE_COURSE","GET_TASK","GET_MISSION","SAVE_MCQUESTION","SAVE_FRQUESTION","CourseScreen","useQuery","loading","error","data","refetch","useState","name","setName","useMutation","addCourse","deleteCourse","onSubmit","event","a","preventDefault","variables","then","response","alert","err","console","handleDeleteCourse","log","target","attributes","courseid","id","value","className","courses","map","onClick","displayCourseList","type","onChange","GoalsScreen","goal","setGoal","tag","setTag","tags","setTags","subgoals","setSubgoals","subName","setSubName","subDate","setSubDate","searchTag","setSearchTag","done","starred","duedate","owner","assignee","open","goals","setGoals","getAllTags","allTags","setAllTags","newGoalOpen","setNewGoalOpen","handleAddGoal","length","push","temptags","Set","i","ii","add","Array","from","DropDown","setOpen","DisplayDropDownList","handleAddTag","concat","handleAddSubgoal","SubGoalList","props","g","subg","SubGoal","sg","goalId","Goal","StarredGoalList","filter","includes","UnstarredGoalList","subgoalId","NewGoalForm","data-testid","subgoal","GoalsDisplay","NewGoalFormDisplay","mockData","completed","prog","untouched","getLineStyle","width","color","height","backgroundColor","border","LearningTarget","total","bookStyle","toString","margin","cLineStyle","pLineStyle","uLineStyle","style","GradeScreen","learningTargets","lt","MTaskOverview","req","hist","useHistory","task","instructions","points","dueDate","requirements","description","for","taskId","pathname","state","test","Mission","focusedTask","setFocusedTask","title","mission","missionContent","missionContentItem","__typename","changeFocusedTask","subMission","displayMissions","TextTask","text","Image","src","myurl","Video","url","ProgressBar","parseInt","doneColor","leftColor","warn","totalNum","doneNum","barStyle","getDone","getLeft","MCQuestion","existingAnswer","answer","setAnswer","currentAnswer","update","cache","answerObject","questionId","question","modify","fields","retrieveQuestionProgress","existingProgress","newAnswerRef","writeFragment","identify","fragment","answers","saveMCQuestion","handleChange","e","setAnswerCallback","context","blockId","answerId","options","answerChoice","index","checked","FRQuestion","setResponse","currentResponse","saveFRQuestion","onBlur","Task","rubricOpen","setRubricOpen","pageNo","setPageNo","pDone","setPDone","isComplete","setRequirements","pages","pTotal","responsesOnPage","Map","expectedResponseCountOnPage","existingAnswers","renderAddButton","skippable","size","renderSubmitButton","Requirement","r","requirementId","visibility","page","blockElements","blockKey","blocks","forEach","block","contents","createTextBlock","imageUrl","createImageBlock","videoUrl","createVideoBlock","questions","createMCQuestionBlock","questionBlockId","set","createFRQuestionBlock","createFRQuestionCallback","renderPage","HOME_SCREEN_PATH","Amplify","configure","Auth","identityPoolId","process","region","userPoolId","userPoolWebClientId","oauth","domain","scope","redirectSignIn","redirectSignOut","responseType","App","accessToken","setAccessToken","client","ApolloClient","uri","InMemoryCache","typePolicies","Answer","keyFields","headers","authorization","getJwtToken","connectToDevTools","login","token","useEffect","Hub","listen","payload","signInUserSession","getAccessToken","currentSession","session","catch","federatedSignIn","signOut","href","component","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","basename","document","getElementById"],"mappings":"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","file":"static/js/main.66088d24.chunk.js","sourcesContent":["import { gql } from '@apollo/client';\n\nexport const GET_ALL_COURSES = gql`\n  {\n    courses {\n      id  \n      name\n    }\n  }\n`;\n\nexport const ADD_COURSE = gql`\n  mutation AddCourse($name: String!){\n    addCourse(\n      name: $name\n    ){\n      name\n    }\n  }\n`;\n\nexport const DELETE_COURSE = gql`\n  mutation DeleteCourse($id: String!){\n    deleteCourse(\n      id: $id\n    )\n  }\n`;\n\nexport const GET_TASK = gql`\n  query getTask($id: String!){\n    task(taskId: $id){\n      id\n      name\n      instructions\n      points\n      startAt\n      endAt\n      dueDate\n      parentMissionId\n      parentMissionIndex\n      objectiveId\n      pages {\n        skippable\n        blocks {\n          title\n          ... on ImageBlock {\n            imageUrl\n          }\n          ... on TextBlock {\n            contents\n            fontSize\n          }\n          ... on VideoBlock {\n            videoUrl\n          }\n          ... on QuizBlock{\n            blockId\n            questions{\n              ... on FrQuestion{\n                id\n                description\n              }\n              ... on McQuestion {\n                id\n                description\n                points\n                options {\n                  description\n                }\n              }\n            }\n          }        \n        }\n      }\n      requirements {\n        id \n        description\n        isComplete\n      }\n    },\n    retrieveQuestionProgress(taskId: $id){\n      answers{\n        questionId\n        pointsAwarded\n        answer\n      }\n    }\n  }\n`;\n\nexport const GET_MISSION = gql`\n  query getMission($id: String!){\n    mission(missionId: $id) {\n      id\n      course\n      name\n      description\n      missionContent{\n        ... on Task{\n          id\n          name\n          instructions\n          points\n          dueDate\n          parentMissionId\n          parentMissionIndex\n          requirements{\n            id\n            description\n          }\n        }\n        ... on SubMission{\n          id\n          name\n          description\n        }\n      }\n    }\n  }\n`;\n\nexport const SAVE_MCQUESTION = gql`\n  mutation saveMCQuestion($taskId: String!, $blockId: String!, $questionId: String!, $answerId: Int!) {\n    saveMultipleChoiceProgress(mcBlockInput: {\n      taskId: $taskId\n      questionBlockId: $blockId\n      questionId: $questionId\n      answerId: $answerId\n    })\n  }\n`;\n\nexport const SAVE_FRQUESTION = gql`\n  mutation saveFRQuestion($taskId: String!, $blockId: String!, $questionId: String!, $answer: String!){\n    saveFreeResponseProgress(frBlockInput: {\n      taskId: $taskId\n      questionBlockId: $blockId\n      questionId: $questionId\n      answer: $answer\n    })\n  }\n`;","import React, { useState } from 'react';\nimport './CourseScreen.css';\nimport { useQuery, useMutation } from '@apollo/client';\nimport { GET_ALL_COURSES, ADD_COURSE, DELETE_COURSE } from '../gqlQueries.js'\n\n\nfunction CourseScreen() {\n\n  const { loading, error, data, refetch} = useQuery(GET_ALL_COURSES);\n  const [name, setName] = useState('');\n  const [addCourse] = useMutation(ADD_COURSE);\n  const [deleteCourse] = useMutation(DELETE_COURSE);\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    try{\n      addCourse({ variables: { name: name } }).then(response => {\n        setName('');\n        refetch();\n        alert('Course Created');\n      });\n    } catch (err) {\n      console.error(err);\n      alert('Error!');\n    }\n  }\n\n  const handleDeleteCourse = (event) => {\n    console.log(event.target.attributes.courseid);\n    try{\n      deleteCourse({ variables: { id: event.target.attributes.courseid.value } }).then(response => {\n        refetch();\n        alert('Course Deleted');\n      });\n    } catch (err) {\n      console.error(err);\n      alert('Error!');\n    }\n  }\n  \n  const displayCourseList = (loading, error, data) => {\n  \n    if (loading) return <p>Loading...</p>;\n    if (error) {\n      console.log(error);\n      return <p>Error :(</p>;\n    }\n    //console.log(data);\n    return data.courses.map(({ id, name }) => (\n      <div key={id} className='courseItem'>\n        <ul>\n          {name}<button className=\"deleteButton\" courseid={id} onClick={handleDeleteCourse}>Delete</button>\n        </ul>\n      </div>\n    ));\n  }\n\n  return (\n    <div> \n      <h1>MY COURSES</h1>\n      <div className=\"row\">\n        <div className=\"column\">\n          <ul>{displayCourseList(loading, error, data)}</ul>\n        </div> \n        <div className=\"column\">\n          <form onSubmit={onSubmit}>\n            <h3>Add Course</h3>\n            <label className=\"courseInput\"> Name: </label>\n            <input type=\"text\" id=\"cname\" name=\"cname\" value={name} onChange={event => setName(event.target.value)}/>\n            <button type=\"submit\" className=\"submitbutton\">Submit</button>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CourseScreen;\n","import React, { useState  } from 'react';\nimport \"./GoalsScreen.css\";\n\n//This component is used to display the main part of the goals screen\nfunction GoalsScreen() {\n\n  //used by the form as a new goal is built\n  const [name, setName] = useState('');\n  const [goal, setGoal] = useState('');\n  const [tag, setTag] = useState('');\n  const [tags, setTags] = useState([]);\n  const [subgoals, setSubgoals] = useState([]);\n\n  //used by the form as a new subgoal is built\n  const [subName, setSubName] = useState('');\n  const [subDate, setSubDate] = useState('');\n\n  //used to filter goals\n  const [searchTag, setSearchTag] = useState('');\n\n  //the main fake data\n  const [goals, setGoals] = useState(\n    [\n      {id: \"0\", name: \"Goal 1\", done: false, starred: false, goal: \"Just do it.\", duedate: \"00/00/00\", tags: ['tag1', 'tag2'], owner: \"testuser\", assignee: \"testuser\", open: false, subgoals: \n        [\n          {id: \"0\", name: \"SubGoal 1\", done: false, goal: \"Just do it.\", duedate: \"00/00/00\"},\n          {id: \"1\", name: \"SubGoal 2\", done: true, goal: \"Inspiring text\", duedate: \"00/00/00\"},\n          {id: \"2\", name: \"SubGoal 3\", done: false, goal: \"Yet another task\", duedate: \"00/00/00\"},\n        ]\n      }, \n      {id: \"1\", name: \"Goal 2\", done: false, starred: true, goal: \"Just do it.\", duedate: \"00/00/00\", tags: ['tag2', 'tag3'], owner: \"testuser\", assignee: \"testuser\", open: true, subgoals: \n        [\n          {id: \"0\", name: \"SubGoal 1\", done: false, goal: \"Just do it.\", duedate: \"00/00/00\"},\n          {id: \"1\", name: \"SubGoal 2\", done: true, goal: \"Inspiring text\", duedate: \"00/00/00\"},\n          {id: \"2\", name: \"SubGoal 3\", done: false, goal: \"Yet another task\", duedate: \"00/00/00\"},\n        ]\n      },\n      {id: \"2\", name: \"Goal 3\", done: false, starred: false, goal: \"Just do it.\", duedate: \"00/00/00\", tags: ['tag2', 'tag3'], owner: \"testuser\", assignee: \"testuser\", open: true, subgoals: \n        [\n          {id: \"0\", name: \"SubGoal 1\", done: false, goal: \"Just do it.\", duedate: \"00/00/00\"},\n          {id: \"1\", name: \"SubGoal 2\", done: false, goal: \"Inspiring text\", duedate: \"00/00/00\"},\n          {id: \"2\", name: \"SubGoal 3\", done: false, goal: \"Yet another task\", duedate: \"00/00/00\"},\n        ]\n      }\n    ]);\n\n  //this keeps track of all tags so that they can be displayed in the filtering section\n  const [allTags, setAllTags] = useState(getAllTags());\n\n  const [newGoalOpen, setNewGoalOpen] = useState(false);\n\n  const handleAddGoal = (event) => {\n    event.preventDefault();\n    setGoals([...goals, {id: goals.length, name: name, done: false, starred: false, goal: goal, duedate: \"00/00/00\", tags: tags, owner: \"testuser\", assignee: \"testuser\", open: false, subgoals: subgoals} ]);\n    goals.push({id: goals.length, name: name, done: false, starred: false, goal: goal, duedate: \"00/00/00\", tags: tags, owner: \"testuser\", assignee: \"testuser\", open: false, subgoals: subgoals});\n    setName('');\n    setGoal('');\n    setTags([]);\n    setSubgoals([]);\n    setAllTags(() =>getAllTags());\n    setNewGoalOpen(false);\n  }\n\n  function getAllTags() {\n    //using a set to avoid adding duplicate values\n    let temptags = new Set();\n    for (var i=0; i<goals.length; i++)\n      for (var ii = 0; ii < goals[i].tags.length; ii++)\n        temptags.add(goals[i].tags[ii]);\n\n    return Array.from(temptags);\n  }\n\n  //dropdown for the list of all available tags\n  function DropDown() {\n    const [open, setOpen] = useState(false);\n\n    return (\n      <div>\n        <button type=\"button\" className=\"dropdownArrowButton\" onClick={()=>setOpen(!open)}>v</button>\n        <br/>\n        {open ? (<DisplayDropDownList/>) : null}\n      </div>);\n\n}\n\n  function DisplayDropDownList(){\n    return(\n      <div>\n        {allTags.map((tag, i)=>(\n        <button type=\"button\" className=\"dropdownItem\" key={i} onClick={()=>setSearchTag(tag)}>{tag}</button>\n        ))}\n      </div>\n    )\n  }\n\n  function handleAddTag() {\n    setTags(tags.concat(tag));\n    setTag('');\n  }\n\n  function handleAddSubgoal() {\n    setSubgoals([...subgoals, {id: subgoals.length, name: subName, done: false, goal: 'n/a', duedate: subDate}]);\n    setSubName('');\n    setSubDate('');\n  }\n\n  function handleCompleteGoal(goalId, subgoalId) {\n    goals[goalId].subgoals[subgoalId].done = !goals[goalId].subgoals[subgoalId].done;\n    setGoals([...goals]);\n  }\n\n  function handleStarGoal(goalId) {\n    goals[goalId].starred = !goals[goalId].starred;\n    setGoals([...goals]);\n  }\n\n  function handleOpenGoal(goalId) {\n    goals[goalId].open = !goals[goalId].open;\n    setGoals([...goals]);\n  }\n\n  //displays a list of subgoals\n  function SubGoalList(props) {\n    return props.g.subgoals.map((subg) => (\n      <SubGoal key={subg.id} sg={subg} goalId={props.g.id}/>\n    ));\n  }\n\n  //displays one goal\n  function Goal(props){\n      return(\n        <div className=\"goal\">\n          <div className=\"goalGrid\">\n            <button className=\"arrowButton\" onClick={() => handleOpenGoal(props.g.id)}>{props.g.open ? \"v\" : \">\" }</button>\n            <h1 >{props.g.name}</h1>\n            <button className=\"checkButton\" courseid={props.g.id} onClick={() => handleStarGoal(props.g.id)}>{props.g.starred ? \"⭐\" : \"\"}</button>\n          </div>\n          {props.g.open ? (<SubGoalList g={props.g}/>) : null }\n        </div>\n      );\n  }\n\n  //displays a list of goals\n  function StarredGoalList() {\n    return goals.filter(({tags, starred}) => {return (tags.includes(searchTag) || searchTag === '') && starred;}).map((goal) => (\n      <Goal key={goal.id} g={goal}/>\n    ));\n  }\n\n  function UnstarredGoalList() {\n    return goals.filter(({tags, starred}) => {return (tags.includes(searchTag) || searchTag === '') && !starred;}).map((goal) => (\n      <Goal key={goal.id} g={goal}/>\n    ));\n  }\n\n  //displays one subgoal\n  function SubGoal(props){\n    return(\n      <div className={props.sg.done ? \"subGoalDone\" : \"subGoal\"}>\n        <h1>{props.sg.name}</h1>\n        <p>{\"due: \"+props.sg.duedate}</p>\n        <button className=\"checkButton\" courseid={props.sg.id} onClick={() => handleCompleteGoal(props.goalId, props.sg.id)}>{props.sg.done ? \"✅\" : \"\"}</button>\n      </div>\n      \n    );\n  }\n\n  function NewGoalForm() {\n    return (\n        <form data-testid=\"test2\" className=\"newGoalForm\" onSubmit={handleAddGoal}>\n          <h3 >Add Goal</h3>\n          <label className=\"textInput\"> Name: </label>\n          <input type=\"text\" id=\"cname\" name=\"cname\" value={name} onChange={event => setName(event.target.value)}/>\n          <br />\n\n          <label className=\"textInput\"> Goal: </label>\n          <input type=\"text\" id=\"cname\" name=\"cname\" value={goal} onChange={event => setGoal(event.target.value)}/>\n          <br />\n          \n          <label className=\"textInput\"> Tag: </label>\n          <input type=\"text\" id=\"cname\" name=\"cname\" value={tag} onChange={event => setTag(event.target.value)}/>\n          <button type=\"button\" onClick={handleAddTag}>add tag</button>\n\n          <div >\n            {tags.map((tag, i)=>(\n            <p key={i}>{tag}</p>\n            ))}\n          </div>\n          \n          <label className=\"textInput\"> Subgoal: </label>\n          <input type=\"text\" id=\"cname\" name=\"cname\" value={subName} onChange={event => setSubName(event.target.value)}/>\n          <label className=\"textInput\"> Due date: </label>\n          <input type=\"text\" id=\"cname\" name=\"cname\" value={subDate} onChange={event => setSubDate(event.target.value)}/>\n          <button type=\"button\" onClick={handleAddSubgoal}>add subgoal</button>\n          \n\n          <div>\n            {subgoals.map((subgoal, i)=>(\n            <p key={i}>{subgoal.name}</p>\n            ))}\n          </div>\n\n          <button type=\"submit\" className=\"submitbutton\">Submit</button>\n        </form>\n    )\n  }\n\n  function GoalsDisplay() {\n    return (\n      <div className=\"mainContainer\">\n        <h1 data-testid=\"test1\" className=\"pageTitle\">Goals</h1>\n        <button type=\"button\" className=\"newGoalButton\" onClick={()=>setNewGoalOpen(true)}>New Goal</button>\n        <div className=\"filterBar\">\n          <h3>Filter by tag:</h3>\n          <div>\n            <input type=\"text\" value={searchTag} onChange={event => setSearchTag(event.target.value)}/>\n            <DropDown/>\n          </div>\n        </div>\n\n        <StarredGoalList/>\n        <UnstarredGoalList/>\n\n      </div>\n    );\n  }\n\n  function NewGoalFormDisplay() {\n    return(\n      <div className=\"popupContainer\">\n        <div className=\"newGoalForm\">\n          <NewGoalForm/>\n          <button type=\"button\" onClick={()=>setNewGoalOpen(false)}>close</button>\n        </div>\n      </div>\n    );\n  }\n\n    return (\n      <div className=\"mainGoalsPage\">   \n        {newGoalOpen ? (<NewGoalFormDisplay key=\"form\"/>) : (<GoalsDisplay key=\"goals\"/>)}\n      </div>\n    );\n}\n\nexport default GoalsScreen;\n","import React from 'react';\nimport './GradeScreen.css';\n\nconst mockData = [\n    {name: 'Learning Target 1', completed : 2, prog : 2, untouched : 1}, \n    {name: 'Learning Target 2', completed : 3, prog : 1, untouched : 0},\n    {name: 'Learning Target 3', completed : 0, prog : 0, untouched : 5},\n    {name: 'Learning Target 4', completed : 6, prog : 8, untouched : 3},\n    {name: 'Learning Target 5', completed : 4, prog : 0, untouched : 0},\n    {name: 'Learning Target 6', completed : 0, prog : 2, untouched : 7},\n    {name: 'Learning Target 7', completed : 2, prog : 8, untouched : 2},\n    {name: 'Learning Target 8', completed : 0, prog : 2, untouched : 0}];\n\nfunction getLineStyle(width, color) {\n    return {\n        height: '5px',\n        width: (width > 5 ? (width - 5) : width) + 'px',\n        color: color,\n        backgroundColor: color,\n        border: '1px solid white'\n    };\n}\n\n\n export function LearningTarget(props) {\n    const width = 200;\n    const height = 200;\n    const total = props.completed + props.prog + props.untouched;\n\n    const bookStyle = {\n        width: width.toString() + 'px',\n        height: height.toString() + 'px',\n        margin: '8px'\n    };\n    const cLineStyle = getLineStyle(\n        (width * (props.completed/total)).toString(), 'green');\n    const pLineStyle = getLineStyle(\n        (width * (props.prog/total)).toString(), 'orange');\n    const uLineStyle = getLineStyle(\n        (width * (props.untouched/total)).toString(), 'red');\n\n    return(\n        <div className='learningtarget' data-testid={ props.name } \n        style={ bookStyle }>\n            <h3>{props.name}</h3>\n            <hr style={ cLineStyle }/>\n            <hr style={ pLineStyle }/>\n            <hr style={ uLineStyle }/>\n        </div>\n    );\n}\n\nexport default function GradeScreen() {\n    const learningTargets = mockData.map(lt => {\n        return(\n            <LearningTarget\n            key = {lt.name}\n            name = {lt.name}\n            completed = {lt.completed}\n            prog = {lt.prog}\n            untouched = {lt.untouched}\n            />\n        );\n    })\n    return(\n        <div>\n            <h1>GradeBook</h1>\n            <div className='gradescreen-grid'>\n                { learningTargets }\n            </div>\n        </div>\n    );\n}\n","import React, { useState  } from 'react';\nimport { useHistory } from 'react-router';\nimport './TaskOverview.css';\n\nconst TASK_COMPONENT_PATH = \"/task\";\n\nfunction MTaskOverview(props) {\n\n  const hist = useHistory();\n\n  if(!props.task){\n    return <div></div>;\n  }\n    \n  const mapRequirements = (req) => {\n    if(!req) return [];\n    return req.map(({description,id}) => (\n      <div key={id}>\n        <input type=\"checkbox\" value=\"A1\" id=\"A1\"/> \n        <label for=\"A1\">{description}</label>\n      </div>))\n  }\n\n  function changeToTaskScreen(taskId){\n    console.log(taskId);\n    hist.push({\n      pathname:TASK_COMPONENT_PATH,\n      state: {\n        id: taskId,\n        test: \"string\"\n      }\n    });\n  }\n\n   return (\n      <div>\n         <h1>{props.task.name}</h1>\n         <h2>{props.task.instructions}</h2>\n         <h2>Points: {props.task.points}</h2>\n         <h2>Due: {props.task.dueDate}</h2>\n         <h2>{mapRequirements(props.task.requirements)}</h2>\n         <div  className=\"start\">\n         <button onClick={() => changeToTaskScreen(props.task.id)}>Start</button>\n         </div>\n      </div>\n   );\n}\n\nexport default MTaskOverview;","import { useQuery, useMutation  } from '@apollo/client';\nimport React, { useState } from 'react';\nimport { GET_MISSION } from '../gqlQueries.js';\nimport MTaskOverview from './MTaskOverview.js';\nimport './Mission.css';\n\n//This component is used to display the mission page.\nfunction Mission() {\n  const { loading, error, data, refetch} = useQuery(GET_MISSION, {\n    variables: { id: \"da0719ba103\" },\n  });\n\n  const [focusedTask, setFocusedTask] = useState(null);\n\n  if(loading) return (\n    <h2>Loading...</h2>\n  )\n\n  if(error){\n    console.log(error);\n    return (\n      <h2>Error!</h2>\n    );\n  }\n\n  const title = data.mission.name;\n  const description = data.mission.description;\n\n  function displayMissions(loading, error, data) {\n    return data.mission.missionContent.map((missionContentItem) => {\n      if (missionContentItem.__typename === 'Task') {\n        return renderTask(missionContentItem);\n      }\n      else if (missionContentItem.__typename === 'SubMission') {\n        return renderSubMission(missionContentItem);\n      }\n    });\n  }\n\n  function changeFocusedTask(task){\n    console.log(focusedTask);\n    setFocusedTask({\n      id: task.id,\n      name: task.name,\n      instructions: task.instructions,\n      points: task.points,\n      dueDate: task.dueDate,\n      requirements: task.requirements\n    })\n  }\n\n  function renderTask(task){\n    return (\n    <div key={task.id} className={task.__typename} onClick={() => changeFocusedTask(task)}>         \n      <ul>\n        {task.name}\n      </ul>\n    </div>\n    )\n  }\n\n  function renderSubMission(subMission){\n    return (\n    <div key={subMission.id} className={subMission.__typename}>         \n        <ul>\n          {subMission.name}\n        </ul>\n      </div>\n    )\n  }\n\n  return (\n    <div> \n      <h1>{title}</h1>\n      <h2>{description}</h2>\n      <div className=\"row\">\n        <div className=\"column\">\n          <ul>{displayMissions(loading, error, data)}</ul>\n        </div>\n        <div className=\"column\">\n          {!focusedTask? null: <div className=\"card\">\n            <MTaskOverview task={focusedTask}/>\n          </div>}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Mission;\n","import React from 'react';\n\nexport function TextTask(props) {\n    return(\n    <div>\n        <h3>{props.text}</h3>\n    </div>\n    );\n}\n","import React from 'react';\n\nfunction Image(props) {\n    return (\n      <div>\n         <img src={props.myurl} />\n      </div>\n    );\n }\n \n export default Image;","import React from 'react';\nimport ReactPlayer from 'react-player';\nimport './Video.css';\n\nfunction Video(props) {\n    return (\n      <div className=\"videoBlock\">\n         <ReactPlayer url= { props.url }/>\n      </div>\n    );\n }\n \n export default Video;","import React, { useState } from 'react';\nimport './ProgressBar.css'\n\nexport default function ProgressBar(props) {\n    const width = (props.width ? parseInt(props.width, 10) : 700);\n    const height = (props.height ? parseInt(props.height, 10) : 10);\n    const doneColor = (props.doneColor ? props.doneColor : 'blue');\n    const leftColor = (props.leftColor ? props.leftColor : 'gray');\n\n    var total = 10;\n    if(props.total) {\n        total = props.total.toString();\n    } else {\n        console.warn('Total missing, default value of 10 being used');\n    }\n    const totalNum = total;\n    var done = 1;\n    if(props.done) {\n        done = props.done.toString();\n    } else {\n        console.warn('Done missing, default value of 1 being used');\n    }\n    const doneNum = done;\n\n\n    const barStyle = {\n        'width' : width.toString() + 'px'\n    }\n\n\n    function getDone() {\n        const style = {\n            'color' : doneColor,\n            'backgroundColor' : doneColor,\n            'height' : height.toString() + 'px',\n            'width' : (doneNum/totalNum * width).toString() + 'px',\n            'border' : '1px solid navy',\n            'border-top-left-radius' : '10px',\n            'border-bottom-left-radius' : '10px'\n        }\n        return(\n            <hr style = {style}></hr>\n        );\n    }\n\n    function getLeft() {\n        const style = {\n            'color' : leftColor,\n            'backgroundColor' : leftColor,\n            'height' : height.toString() + 'px',\n            'width' : ((totalNum-doneNum)/(totalNum) * width).toString() + 'px',\n            'border' : '1px solid navy',\n            'border-top-right-radius' : '10px',\n            'border-bottom-right-radius' : '10px'\n        }\n        return(\n            <hr style = {style}></hr>\n        );\n    }\n\n    return(\n        <div className='pbar' style = {barStyle}>\n            { getDone() }\n            { getLeft() }\n        </div>\n    );\n}","import React, { useState } from 'react';\nimport { useMutation  } from '@apollo/client';\nimport { SAVE_MCQUESTION } from '../gqlQueries.js';\nimport { gql } from '@apollo/client';\nimport \"./Question.css\";\n\n\nfunction MCQuestion(props) {\n  const [answer,setAnswer]=useState(props.existingAnswer);\n  let currentAnswer = answer;\n  const [saveMCQuestion] = useMutation(SAVE_MCQUESTION, {\n    update(cache) {\n\n      const answerObject = {\n        __typename: 'Answer',\n        questionId: props.question.id,\n        answer\n      }\n\n      cache.modify({\n        fields: {\n          retrieveQuestionProgress(existingProgress = {}) {\n            const newAnswerRef = cache.writeFragment({\n              id: cache.identify(answerObject),\n              fragment: gql`\n                fragment MyAnswer on Answer {\n                  answer\n                }\n              `,\n              data: {\n                answer: currentAnswer,\n              },\n            });\n            return {...existingProgress, answers: [...existingProgress.answers, newAnswerRef]};\n          }\n        }\n      });\n    }\n  });\n\n\n  function saveResponse(value){ \n    saveMCQuestion({\n      variables: {\n        taskId: props.context.taskId,\n        blockId: props.context.blockId,\n        questionId: props.question.id,\n        answerId: parseInt(value)\n      }\n    })\n  }\n\n  const handleChange=(e)=>{\n    currentAnswer = e.target.value;\n    setAnswer(e.target.value);\n    props.setAnswerCallback(e.target.value);\n    saveResponse(e.target.value);   \n  }\n\n  const renderAnswerChoices = () => {\n    return props.question.options.map((answerChoice, index) => {\n      return (\n        <div key={index}>\n          <div className=\"hline\"/>\n          <div className=\"answerChoiceItem\">\n            <label> \n              <input type=\"radio\" value={index} id={index} name=\"AnswerChoices\" onChange={handleChange}\n              checked={answer == index? \"checked\" : \"\"} /> \n              {answerChoice.description}\n            </label>\n          </div>\n        </div>\n      );\n    })\n  }\n\n   return (\n    <div className=\"chunk\">\n      <h2>{props.question.description}</h2>\n      <form className=\"questionBlock\">\n        {renderAnswerChoices()}\n      </form>\n    </div>\n  );\n}\n\nexport default MCQuestion;","import React, { useState } from 'react';\nimport { useMutation  } from '@apollo/client';\nimport { SAVE_FRQUESTION } from '../gqlQueries.js';\nimport { gql } from '@apollo/client';\nimport \"./Question.css\";\n\nfunction FRQuestion(props) {\n   const [response, setResponse] = useState(props.existingAnswer);\n   let currentResponse = response;\n   const [saveFRQuestion] = useMutation(SAVE_FRQUESTION, {\n    update(cache) {\n\n      const answerObject = {\n        __typename: 'Answer',\n        questionId: props.question.id\n      }\n\n      cache.modify({\n        fields: {\n          retrieveQuestionProgress(existingProgress = {}) {\n            const newAnswerRef = cache.writeFragment({\n              id: cache.identify(answerObject),\n              fragment: gql`\n                fragment MyAnswer on Answer {\n                  answer\n                }\n              `,\n              data: {\n                answer: currentResponse,\n              },\n            });\n            return {...existingProgress, answers: [...existingProgress.answers, newAnswerRef]};\n          }\n        }\n      });\n    }\n  });\n\n   function saveResponse(value){\n    saveFRQuestion({\n      variables: {\n        taskId: props.context.taskId,\n        blockId: props.context.blockId,\n        questionId: props.question.id,\n        answer: value\n      }\n    })\n  }\n\n    \n   const updateText=(e)=>{\n    setResponse(e.target.value);\n  }\n\n  const saveText=(e)=>{\n    currentResponse = e.target.value;\n    props.setAnswerCallback(e.target.value);\n    saveResponse(e.target.value);\n  }\n \n    return (\n      <div>\n        <div className=\"chunk\">\n          <h2>{props.question.description}</h2>\n          <form className=\"questionBlock\">\n              <textarea id=\"cname\" name=\"cname\" value={response}\n                onChange={updateText}\n                onBlur={saveText}/>\n          </form>\n        </div>\n      </div>\n    );\n }\n \n export default FRQuestion;","import { useQuery  } from '@apollo/client';\nimport { useState } from 'react';\nimport { GET_TASK } from '../gqlQueries.js';\nimport { TextTask } from './Text.js';\nimport Image from './Image.js';\nimport Video from './Video.js';\nimport ProgressBar from './ProgressBar.js';\nimport './Task.css';\nimport MCQuestion from './MCQuestion.js';\nimport FRQuestion from './FRQuestion.js';\n\nfunction createTextBlock(blockKey, contents){\n  return <div className=\"taskBlock\" key={blockKey}>\n    <TextTask text = {contents}/>\n  </div>\n}\n\nfunction createImageBlock(blockKey, imageUrl){\n  return <div className=\"taskBlock\" key={blockKey}>\n    <Image myurl = {imageUrl}/>\n  </div>\n}\n\nfunction createVideoBlock(blockKey, videoUrl){\n  return <div className=\"taskBlock\" key={blockKey}>\n    <Video url = {videoUrl}/>\n  </div>\n}\n\nfunction createMCQuestionBlock(taskId, blockId, blockKey, question, existingAnswer, setAnswerCallback){\n\n  if(existingAnswer){\n    setAnswerCallback(parseInt(existingAnswer.answer));\n  }\n\n  return <div className=\"taskBlock\" key={blockKey}>\n    <MCQuestion \n      question={question}\n      setAnswerCallback={setAnswerCallback}\n      existingAnswer={existingAnswer?.answer}\n      context={{\n        taskId: taskId,\n        blockId: blockId\n      }}/>\n  </div>\n}\n\nfunction createFRQuestionBlock(taskId, blockId, blockKey, question, existingAnswer, setAnswerCallback){\n\n  if(existingAnswer){\n    setAnswerCallback(parseInt(existingAnswer));\n  }\n\n  return <div className=\"taskBlock\" key={blockKey}>\n    <FRQuestion question={question}\n      setAnswerCallback={setAnswerCallback}\n      existingAnswer={existingAnswer?.answer}\n      context={{\n        taskId: taskId,\n        blockId: blockId\n      }}/>\n  </div>\n}\n\nfunction Task(props) {\n\n  const taskId = \"4f681550ba9\";\n\n  const { loading, error, data, refetch} = useQuery(GET_TASK, {\n    variables: { id: taskId },\n  });\n\n  const [rubricOpen, setRubricOpen] = useState(false);\n  const [pageNo, setPageNo] = useState(0);\n  const [pDone, setPDone] = useState(1);\n  const [requirements, setRequirements] = useState([\n    {id: 0, description: \"Understand the structure of covalent bonds\", isComplete: false}, \n    {id: 1, description: \"Understand the properties of covalent bonds\", isComplete: false}, \n    {id: 2, description: \"Understand the intricacies of covalent bonds\", isComplete: false}\n  ]);\n\n  if(loading) return (\n    <div className = 'tasks'> \n      <h1>Loading...</h1>\n    </div>\n  )\n\n  if(error){\n    console.log(error);\n    return (\n      <div className = 'tasks'> \n        <h1>Error!</h1>\n      </div>\n    );\n  }\n\n  const pages = data.task.pages;\n  const title = data.task.name;\n  // const requirements = data.task.requirements;\n  \n  const pTotal = pages.length;\n  const responsesOnPage = new Map();\n  let expectedResponseCountOnPage = 0;\n  const existingAnswers = data.retrieveQuestionProgress.answers;\n\n  const addPage = () => {\n    if(!pages[pageNo].skippable && responsesOnPage.size < expectedResponseCountOnPage){\n      alert(\"Please answer all questions on this page before moving on\");\n    }\n    else if(pageNo < pages.length - 1) {\n      setPageNo(pageNo + 1);\n      setPDone(pDone + 1);\n    }\n  }\n\n  const subPage = () => {\n    if(pageNo > 0) {\n      setPageNo(pageNo - 1);\n      setPDone(pDone - 1);\n    }\n  }\n\n  const submitTask = () => {\n    alert(`${title} submitted.`);\n  }\n\n  /* creates a callback function for a MCQuestion component\n   * to call when the user clicks an answer, allowing this\n   * task component to know when the user answered a question,\n   * and what answer they gave. */\n  function createMCQuestionCallback(blockId, questionId){\n    return (answerId) => {\n      const response = {\n        taskId: taskId,\n        questionBlockId: blockId,\n        questionId: questionId,\n        answerId: parseInt(answerId)\n      };\n      responsesOnPage.set(questionId, response);\n    }\n  }\n\n  /* creates a callback function for a FRQuestion component\n   * to call when the user types an answer, allowing this\n   * task component to know when the user answered a question,\n   * and what answer they gave. */\n  function createFRQuestionCallback(blockId, questionId){\n    return (answer) => {\n      const response = {\n        taskId: taskId,\n        questionBlockId: blockId,\n        questionId: questionId,\n        answer: answer\n      };\n      responsesOnPage.set(questionId, response);\n    }\n  }\n\n  function renderHeader() {\n    return(\n      <div className='header'>\n        <h1>{ title }</h1>\n        <div className=\"headerButtons\">\n          <div>{ renderPrevButton() }</div>\n          <div>{ renderRubricButton() }</div>\n          <div>{ (pageNo < pages.length - 1) ? renderAddButton() : renderSubmitButton()}</div>\n        </div>\n      </div>\n    \n    );\n  }\n\n  function renderPrevButton() {\n    return (<button\n      onClick= { () => subPage() }\n      style={pageNo > 0 ? {} : {visibility: \"hidden\"}}>Previous</button>);\n  }\n\n  function renderAddButton() {\n    if(pageNo < pages.length - 1) {\n      return (<button onClick = { () => addPage() }>Next</button>);\n    }\n  }\n\n  function renderRubricButton() {\n      return (<button onClick = { () => setRubricOpen(!rubricOpen) }>Task Rubric</button>);\n  }\n\n  function renderSubmitButton() {\n    if(pageNo === pages.length - 1) {\n      return (<button onClick = { () => submitTask() }>Submit</button>);\n    }\n  }\n\n  function renderRubric() {\n    \n    return(\n      <div className=\"rubric\">\n        {rubricOpen ? (\n          <div className=\"requirementsList\">{RequirementsList()}</div>\n        ) : null}\n      </div>\n    );\n  }\n\n  //displays a list of requirements\n  function RequirementsList(props) {\n    return requirements.map((r) => (\n      <Requirement key={r.id} r={r} />\n    ));\n  }\n\n  //displays one requirement\n  function Requirement(props){\n    return(\n      <div className={props.r.isComplete ? \"requirementDone\" : \"requirement\"}>\n        <h1 >{props.r.description}</h1>\n        <button className=\"reqCheckButton\" courseid={props.r.id} onClick={() => handleCompleteRequirement(props.r.id)}>{props.r.isComplete ? \"✅\" : \"\"}</button>\n      </div>\n      \n    );\n  }\n\n  function handleCompleteRequirement(requirementId) {\n    requirements[requirementId].isComplete = !requirements[requirementId].isComplete;\n    setRequirements([...requirements]);\n  }\n\n  function renderPage() {\n    const page = pages[pageNo];\n\n    if(!page) return <div></div>\n\n    const blockElements = [];\n    let blockKey = 0;\n\n    page.blocks.forEach(block => {\n      if(block.__typename === 'TextBlock') {\n        blockElements.push(createTextBlock(blockKey, block.contents));\n      }\n      else if(block.__typename === 'ImageBlock') {\n        blockElements.push(createImageBlock(blockKey, block.imageUrl));\n      }\n      else if(block.__typename === 'VideoBlock') {\n        blockElements.push(createVideoBlock(blockKey, block.videoUrl));\n      }\n      else if(block.__typename === 'QuizBlock'){\n        block.questions.forEach((question) => {\n          if(question.__typename == 'McQuestion'){\n            blockElements.push(\n              createMCQuestionBlock(taskId, block.blockId, blockKey, question,\n                existingAnswers.filter(answer => answer.questionId == question.id)[0],\n                createMCQuestionCallback(block.blockId, question.id)\n              )\n            );\n          }\n          else if(question.__typename == 'FrQuestion'){\n            blockElements.push(\n              createFRQuestionBlock(taskId, block.blockId, blockKey, question,\n                existingAnswers.filter(answer => answer.questionId == question.id)[0],\n                createFRQuestionCallback(block.blockId, question.id)\n              )\n            );\n          }\n          else{\n            console.error('unknown question type');\n          }\n          expectedResponseCountOnPage += 1;\n          blockKey += 1;\n        })        \n      }\n      else{\n        console.error('unknown task block type');\n      }\n      blockKey += 1;\n    });\n\n    return(\n      <div className='page'>\n        { blockElements }\n      </div>\n    );\n  }\n\n  return (\n    <div className = 'tasks'> \n      \n      { renderHeader() }\n      { renderRubric() }\n      { renderPage() }\n      \n      <ProgressBar \n        width='700'\n        height='10'\n        doneColor='#4274F3'\n        leftColor='rgb(108, 108, 133)'\n        total={pTotal}\n        done={pDone}\n      />\n    </div>\n  );\n}\n\nexport default Task;","import React, { useEffect, useState } from 'react';\nimport Amplify, { Auth, Hub } from 'aws-amplify';\nimport { ApolloProvider } from '@apollo/client';\nimport { ApolloClient, InMemoryCache } from '@apollo/client';\nimport {Route, Switch} from 'react-router-dom';\nimport { useHistory } from 'react-router';\nimport CourseScreen from './Components/CourseScreen.js';\nimport GoalsScreen from './Components/GoalsScreen.js';\nimport GradeScreen from './Components/GradeScreen';\nimport Mission from './Components/Mission';\nimport Task from './Components/Task';\nimport \"./App.css\";\nimport MTaskOverview from './Components/MTaskOverview';\n\nconst HOME_SCREEN_PATH = '/mission';\n\nAmplify.configure({\n  Auth: {\n      identityPoolId: process.env.REACT_APP_IDENTITY_POOL_ID,\n      region: process.env.REACT_APP_REGION,\n      userPoolId: process.env.REACT_APP_USER_POOL_ID,\n      userPoolWebClientId: process.env.REACT_APP_USER_POOL_WEB_CLIENT_ID,\n      oauth: {\n        domain: process.env.REACT_APP_DOMAIN,\n        scope: [process.env.REACT_APP_SCOPE_A, process.env.REACT_APP_SCOPE_B, process.env.REACT_APP_SCOPE_C, \n          process.env.REACT_APP_SCOPE_D, process.env.REACT_APP_SCOPE_E],\n        redirectSignIn: process.env.REACT_APP_REDIRECT_SIGNIN,\n        redirectSignOut: process.env.REACT_APP_REDIRECT_SIGNOUT,\n        responseType: process.env.REACT_APP_RESPONSE_TYPE\n      }\n  }\n});\n\nfunction App() {\n  const [accessToken, setAccessToken] = useState(null);\n  const hist = useHistory();\n\n  const refreshCredentials = () => {\n    return Auth.currentSession()\n    .then(session => {\n      setAccessToken(session.getAccessToken());\n    })\n    .catch(() => console.log('not signed in'));\n  }\n\n  const client = new ApolloClient({\n    uri: process.env.REACT_APP_PROD_URI,\n    cache: new InMemoryCache({\n      typePolicies: {\n        Answer: {\n          keyFields: [\"questionId\"],\n        },\n      }\n    }),\n    headers: {\n      authorization: accessToken == null? null : accessToken.getJwtToken(),\n    },\n    connectToDevTools: true\n  });\n\n  const LoginComponent = () => {\n  \n    if(accessToken) hist.push(HOME_SCREEN_PATH)\n\n    return (\n      <div className=\"loginPage\">\n        <h1 className=\"logo\"> flipt.ED </h1>\n        <h2> Student Portal </h2>\n        <button onClick={() => Auth.federatedSignIn()}>Sign In</button>\n      </div>\n    );\n  }\n\n  const login = (token) => {\n    setAccessToken(token);\n    hist.push({\n      pathname:HOME_SCREEN_PATH\n    });\n  }\n\n  const logout = () => {\n    setAccessToken(null);\n    hist.push({\n      pathname:'/'\n    });\n  }\n\n  useEffect(() => {\n    Hub.listen('auth', ({ payload: { event, data } }) => {\n      switch (event) {\n        case 'signIn':\n        case 'cognitoHostedUI':\n          login(data.signInUserSession.getAccessToken());\n          console.log('Successful Sign In.');\n          console.log(data);\n          break;\n        case 'signUp':\n          login(data.signInUserSession.getAccessToken());\n          console.log('user signed up');\n          break;\n        case 'signOut':\n          logout();\n          break;\n        case 'signIn_failure':\n          console.log('Sign In Failure.');\n          break;\n        case 'cognitoHostedUI_failure':\n          console.log('Sign in failure', data);\n          break;\n      }\n    });\n    refreshCredentials();\n  }, []);\n\n  return (\n    <div>\n      <p className=\"navbar\">\n        <p className=\"title\">flipt.ED</p>\n\n        {accessToken == null? <li><a onClick={() => Auth.federatedSignIn()}>Sign In</a></li> :\n        \n        <div>\n        <li><a onClick={() => Auth.signOut()}>Sign Out</a></li>  \n        <li><a href=\"/goalsscreen\">Goals</a></li>\n        <li><a href=\"/gradescreen\">Grades</a></li> \n        <li><a href=\"/task\">Task</a></li>  \n        <li><a href=\"/coursescreen\">Courses</a></li>\n        <li><a href=\"/mission\">Mission</a></li>      \n        </div>}\n      </p>\n      \n      \n      \n      \n      <ApolloProvider client={client}>\n\n        <div>\n        <Switch>\n          <Route component = {LoginComponent} exact path = '/'/>\n          <Route component = {CourseScreen} exact path = '/coursescreen'/>\n          <Route component = {GoalsScreen} exact path = '/goalsscreen'/>\n          <Route component = {GradeScreen} exact path = '/gradescreen'/>\n          <Route component = {Mission} exact path = '/mission'/>\n          <Route component = {Task} exact path = '/task'/>\n          <Route component = {MTaskOverview} exact path = '/mtaskoverview'/>\n        </Switch>\n        </div>\n      </ApolloProvider>\n    </div>\n  );\n}\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter basename='/Flipted-Hydro'>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}