{"version":3,"sources":["gqlQueries.js","Components/CourseScreen.js","Components/GoalsScreen.js","Components/MCQuizScreen.js","Components/FillBlank.js","Components/FreeResponse.js","Components/MultiSelect.js","Components/VideoScreen.js","Components/ImageScreen.js","Components/GradeScreen.js","Components/Text.js","Components/ProgressBar.js","Components/Task.js","App.js","reportWebVitals.js","index.js"],"names":["GET_ALL_COURSES","gql","ADD_COURSE","DELETE_COURSE","GET_TASK","CourseScreen","useQuery","loading","error","data","refetch","useState","name","setName","useMutation","addCourse","deleteCourse","onSubmit","event","a","preventDefault","variables","then","response","alert","err","console","handleDeleteCourse","log","target","attributes","courseid","id","value","className","courses","map","onClick","displayCourseList","type","onChange","GoalsScreen","goal","setGoal","tag","setTag","tags","setTags","subgoals","setSubgoals","subName","setSubName","subDate","setSubDate","searchTag","setSearchTag","done","starred","duedate","owner","assignee","open","goals","setGoals","getAllTags","allTags","setAllTags","newGoalOpen","setNewGoalOpen","handleAddGoal","length","push","temptags","Set","i","ii","add","Array","from","DropDown","setOpen","DisplayDropDownList","handleAddTag","concat","handleAddSubgoal","SubGoalList","props","g","subg","SubGoal","sg","goalId","Goal","StarredGoalList","filter","includes","UnstarredGoalList","subgoalId","NewGoalForm","data-testid","subgoal","GoalsDisplay","NewGoalFormDisplay","MCQuizScreen","setAnswer","handleChange","e","for","FillBlank","myname","FreeResponse","MultiSelect","VideoScreen","url","ImageScreen","myurl","src","mockData","completed","prog","untouched","getLineStyle","width","color","height","backgroundColor","border","LearningTarget","total","bookStyle","toString","margin","cLineStyle","pLineStyle","uLineStyle","style","GradeScreen","learningTargets","lt","TextTask","text","ProgressBar","parseInt","doneColor","leftColor","warn","totalNum","doneNum","barStyle","getDone","getLeft","Task","pageNo","setPageNo","pDone","setPDone","pages","task","title","pTotal","renderPrevButton","renderAddButton","renderSubmitButton","page","blockElements","blocks","forEach","blck","__typename","contents","imageUrl","videoUrl","renderPage","HOME_SCREEN_PATH","Amplify","configure","Auth","identityPoolId","process","region","userPoolId","userPoolWebClientId","oauth","domain","scope","redirectSignIn","redirectSignOut","responseType","App","accessToken","setAccessToken","hist","useHistory","client","ApolloClient","uri","cache","InMemoryCache","headers","authorization","getJwtToken","login","token","pathname","useEffect","Hub","listen","payload","signInUserSession","getAccessToken","currentSession","session","catch","federatedSignIn","signOut","href","component","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a86491f7.chunk.js","sourcesContent":["import { gql } from '@apollo/client';\n\nexport const GET_ALL_COURSES = gql`\n  {\n    courses {\n      id  \n      name\n    }\n  }\n`;\n\nexport const ADD_COURSE = gql`\n  mutation AddCourse($name: String!){\n    addCourse(\n      name: $name\n    ){\n      name\n    }\n  }\n`;\n\nexport const DELETE_COURSE = gql`\n  mutation DeleteCourse($id: String!){\n    deleteCourse(\n      id: $id\n    )\n  }\n`;\n\nexport const GET_TASK = gql`\n  query getTask($id: String!){\n    task(taskId: $id){\n      id\n      name\n      instructions\n      points\n      startAt\n      endAt\n      dueDate\n      parentMissionId\n      parentMissionIndex\n      objectiveId\n      pages {\n        blocks {\n          title\n          ... on ImageBlock {\n            imageUrl\n          }\n          ... on TextBlock {\n            contents\n            fontSize\n          }\n          ... on VideoBlock {\n            videoUrl\n          }        \n        }\n      }\n    }\n  }\n`;","import React, { useState } from 'react';\nimport './CourseScreen.css';\nimport { useQuery, useMutation } from '@apollo/client';\nimport { GET_ALL_COURSES, ADD_COURSE, DELETE_COURSE } from '../gqlQueries.js'\n\n\nfunction CourseScreen() {\n\n  const { loading, error, data, refetch} = useQuery(GET_ALL_COURSES);\n  const [name, setName] = useState('');\n  const [addCourse] = useMutation(ADD_COURSE);\n  const [deleteCourse] = useMutation(DELETE_COURSE);\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    try{\n      addCourse({ variables: { name: name } }).then(response => {\n        setName('');\n        refetch();\n        alert('Course Created');\n      });\n    } catch (err) {\n      console.error(err);\n      alert('Error!');\n    }\n  }\n\n  const handleDeleteCourse = (event) => {\n    console.log(event.target.attributes.courseid);\n    try{\n      deleteCourse({ variables: { id: event.target.attributes.courseid.value } }).then(response => {\n        refetch();\n        alert('Course Deleted');\n      });\n    } catch (err) {\n      console.error(err);\n      alert('Error!');\n    }\n  }\n  \n  const displayCourseList = (loading, error, data) => {\n  \n    if (loading) return <p>Loading...</p>;\n    if (error) {\n      console.log(error);\n      return <p>Error :(</p>;\n    }\n    //console.log(data);\n    return data.courses.map(({ id, name }) => (\n      <div key={id} className='courseItem'>\n        <ul>\n          {name}<button className=\"deleteButton\" courseid={id} onClick={handleDeleteCourse}>Delete</button>\n        </ul>\n      </div>\n    ));\n  }\n\n  return (\n    <div> \n      <h1>MY COURSES</h1>\n      <div className=\"row\">\n        <div className=\"column\">\n          <ul>{displayCourseList(loading, error, data)}</ul>\n        </div> \n        <div className=\"column\">\n          <form onSubmit={onSubmit}>\n            <h3>Add Course</h3>\n            <label className=\"courseInput\"> Name: </label>\n            <input type=\"text\" id=\"cname\" name=\"cname\" value={name} onChange={event => setName(event.target.value)}/>\n            <button type=\"submit\" className=\"submitbutton\">Submit</button>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CourseScreen;\n","import React, { useState  } from 'react';\nimport \"./GoalsScreen.css\";\n\n//This component is used to display the main part of the goals screen\nfunction GoalsScreen() {\n\n  //used by the form as a new goal is built\n  const [name, setName] = useState('');\n  const [goal, setGoal] = useState('');\n  const [tag, setTag] = useState('');\n  const [tags, setTags] = useState([]);\n  const [subgoals, setSubgoals] = useState([]);\n\n  //used by the form as a new subgoal is built\n  const [subName, setSubName] = useState('');\n  const [subDate, setSubDate] = useState('');\n\n  //used to filter goals\n  const [searchTag, setSearchTag] = useState('');\n\n  //the main fake data\n  const [goals, setGoals] = useState(\n    [\n      {id: \"0\", name: \"Goal 1\", done: false, starred: false, goal: \"Just do it.\", duedate: \"00/00/00\", tags: ['tag1', 'tag2'], owner: \"testuser\", assignee: \"testuser\", open: false, subgoals: \n        [\n          {id: \"0\", name: \"SubGoal 1\", done: false, goal: \"Just do it.\", duedate: \"00/00/00\"},\n          {id: \"1\", name: \"SubGoal 2\", done: true, goal: \"Inspiring text\", duedate: \"00/00/00\"},\n          {id: \"2\", name: \"SubGoal 3\", done: false, goal: \"Yet another task\", duedate: \"00/00/00\"},\n        ]\n      }, \n      {id: \"1\", name: \"Goal 2\", done: false, starred: true, goal: \"Just do it.\", duedate: \"00/00/00\", tags: ['tag2', 'tag3'], owner: \"testuser\", assignee: \"testuser\", open: true, subgoals: \n        [\n          {id: \"0\", name: \"SubGoal 1\", done: false, goal: \"Just do it.\", duedate: \"00/00/00\"},\n          {id: \"1\", name: \"SubGoal 2\", done: true, goal: \"Inspiring text\", duedate: \"00/00/00\"},\n          {id: \"2\", name: \"SubGoal 3\", done: false, goal: \"Yet another task\", duedate: \"00/00/00\"},\n        ]\n      },\n      {id: \"2\", name: \"Goal 3\", done: false, starred: false, goal: \"Just do it.\", duedate: \"00/00/00\", tags: ['tag2', 'tag3'], owner: \"testuser\", assignee: \"testuser\", open: true, subgoals: \n        [\n          {id: \"0\", name: \"SubGoal 1\", done: false, goal: \"Just do it.\", duedate: \"00/00/00\"},\n          {id: \"1\", name: \"SubGoal 2\", done: false, goal: \"Inspiring text\", duedate: \"00/00/00\"},\n          {id: \"2\", name: \"SubGoal 3\", done: false, goal: \"Yet another task\", duedate: \"00/00/00\"},\n        ]\n      }\n    ]);\n\n  //this keeps track of all tags so that they can be displayed in the filtering section\n  const [allTags, setAllTags] = useState(getAllTags());\n\n  const [newGoalOpen, setNewGoalOpen] = useState(false);\n\n  const handleAddGoal = (event) => {\n    event.preventDefault();\n    setGoals([...goals, {id: goals.length, name: name, done: false, starred: false, goal: goal, duedate: \"00/00/00\", tags: tags, owner: \"testuser\", assignee: \"testuser\", open: false, subgoals: subgoals} ]);\n    goals.push({id: goals.length, name: name, done: false, starred: false, goal: goal, duedate: \"00/00/00\", tags: tags, owner: \"testuser\", assignee: \"testuser\", open: false, subgoals: subgoals});\n    setName('');\n    setGoal('');\n    setTags([]);\n    setSubgoals([]);\n    setAllTags(() =>getAllTags());\n    setNewGoalOpen(false);\n  }\n\n  function getAllTags() {\n    //using a set to avoid adding duplicate values\n    let temptags = new Set();\n    for (var i=0; i<goals.length; i++)\n      for (var ii = 0; ii < goals[i].tags.length; ii++)\n        temptags.add(goals[i].tags[ii]);\n\n    return Array.from(temptags);\n  }\n\n  //dropdown for the list of all available tags\n  function DropDown() {\n    const [open, setOpen] = useState(false);\n\n    return (\n      <div>\n        <button type=\"button\" className=\"dropdownArrowButton\" onClick={()=>setOpen(!open)}>v</button>\n        <br/>\n        {open ? (<DisplayDropDownList/>) : null}\n      </div>);\n\n}\n\n  function DisplayDropDownList(){\n    return(\n      <div>\n        {allTags.map((tag, i)=>(\n        <button type=\"button\" className=\"dropdownItem\" key={i} onClick={()=>setSearchTag(tag)}>{tag}</button>\n        ))}\n      </div>\n    )\n  }\n\n  function handleAddTag() {\n    setTags(tags.concat(tag));\n    setTag('');\n  }\n\n  function handleAddSubgoal() {\n    setSubgoals([...subgoals, {id: subgoals.length, name: subName, done: false, goal: 'n/a', duedate: subDate}]);\n    setSubName('');\n    setSubDate('');\n  }\n\n  function handleCompleteGoal(goalId, subgoalId) {\n    goals[goalId].subgoals[subgoalId].done = !goals[goalId].subgoals[subgoalId].done;\n    setGoals([...goals]);\n  }\n\n  function handleStarGoal(goalId) {\n    goals[goalId].starred = !goals[goalId].starred;\n    setGoals([...goals]);\n  }\n\n  function handleOpenGoal(goalId) {\n    goals[goalId].open = !goals[goalId].open;\n    setGoals([...goals]);\n  }\n\n  //displays a list of subgoals\n  function SubGoalList(props) {\n    return props.g.subgoals.map((subg) => (\n      <SubGoal key={subg.id} sg={subg} goalId={props.g.id}/>\n    ));\n  }\n\n  //displays one goal\n  function Goal(props){\n      return(\n        <div className=\"goal\">\n          <div className=\"goalGrid\">\n            <button className=\"arrowButton\" onClick={() => handleOpenGoal(props.g.id)}>{props.g.open ? \"v\" : \">\" }</button>\n            <h1 >{props.g.name}</h1>\n            <button className=\"checkButton\" courseid={props.g.id} onClick={() => handleStarGoal(props.g.id)}>{props.g.starred ? \"⭐\" : \"\"}</button>\n          </div>\n          {props.g.open ? (<SubGoalList g={props.g}/>) : null }\n        </div>\n      );\n  }\n\n  //displays a list of goals\n  function StarredGoalList() {\n    return goals.filter(({tags, starred}) => {return (tags.includes(searchTag) || searchTag === '') && starred;}).map((goal) => (\n      <Goal key={goal.id} g={goal}/>\n    ));\n  }\n\n  function UnstarredGoalList() {\n    return goals.filter(({tags, starred}) => {return (tags.includes(searchTag) || searchTag === '') && !starred;}).map((goal) => (\n      <Goal key={goal.id} g={goal}/>\n    ));\n  }\n\n  //displays one subgoal\n  function SubGoal(props){\n    return(\n      <div className={props.sg.done ? \"subGoalDone\" : \"subGoal\"}>\n        <h1>{props.sg.name}</h1>\n        <p>{\"due: \"+props.sg.duedate}</p>\n        <button className=\"checkButton\" courseid={props.sg.id} onClick={() => handleCompleteGoal(props.goalId, props.sg.id)}>{props.sg.done ? \"✅\" : \"\"}</button>\n      </div>\n      \n    );\n  }\n\n  function NewGoalForm() {\n    return (\n        <form data-testid=\"test2\" className=\"newGoalForm\" onSubmit={handleAddGoal}>\n          <h3 >Add Goal</h3>\n          <label className=\"textInput\"> Name: </label>\n          <input type=\"text\" id=\"cname\" name=\"cname\" value={name} onChange={event => setName(event.target.value)}/>\n          <br />\n\n          <label className=\"textInput\"> Goal: </label>\n          <input type=\"text\" id=\"cname\" name=\"cname\" value={goal} onChange={event => setGoal(event.target.value)}/>\n          <br />\n          \n          <label className=\"textInput\"> Tag: </label>\n          <input type=\"text\" id=\"cname\" name=\"cname\" value={tag} onChange={event => setTag(event.target.value)}/>\n          <button type=\"button\" onClick={handleAddTag}>add tag</button>\n\n          <div >\n            {tags.map((tag, i)=>(\n            <p key={i}>{tag}</p>\n            ))}\n          </div>\n          \n          <label className=\"textInput\"> Subgoal: </label>\n          <input type=\"text\" id=\"cname\" name=\"cname\" value={subName} onChange={event => setSubName(event.target.value)}/>\n          <label className=\"textInput\"> Due date: </label>\n          <input type=\"text\" id=\"cname\" name=\"cname\" value={subDate} onChange={event => setSubDate(event.target.value)}/>\n          <button type=\"button\" onClick={handleAddSubgoal}>add subgoal</button>\n          \n\n          <div>\n            {subgoals.map((subgoal, i)=>(\n            <p key={i}>{subgoal.name}</p>\n            ))}\n          </div>\n\n          <button type=\"submit\" className=\"submitbutton\">Submit</button>\n        </form>\n    )\n  }\n\n  function GoalsDisplay() {\n    return (\n      <div className=\"mainContainer\">\n        <h1 data-testid=\"test1\" className=\"pageTitle\">Goals</h1>\n        <button type=\"button\" className=\"newGoalButton\" onClick={()=>setNewGoalOpen(true)}>New Goal</button>\n        <div className=\"filterBar\">\n          <h3>Filter by tag:</h3>\n          <div>\n            <input type=\"text\" value={searchTag} onChange={event => setSearchTag(event.target.value)}/>\n            <DropDown/>\n          </div>\n        </div>\n\n        <StarredGoalList/>\n        <UnstarredGoalList/>\n\n      </div>\n    );\n  }\n\n  function NewGoalFormDisplay() {\n    return(\n      <div className=\"popupContainer\">\n        <div className=\"newGoalForm\">\n          <NewGoalForm/>\n          <button type=\"button\" onClick={()=>setNewGoalOpen(false)}>close</button>\n        </div>\n      </div>\n    );\n  }\n\n    return (\n      <div className=\"mainGoalsPage\">   \n        {newGoalOpen ? (<NewGoalFormDisplay key=\"form\"/>) : (<GoalsDisplay key=\"goals\"/>)}\n      </div>\n    );\n}\n\nexport default GoalsScreen;\n","import React, { useState } from 'react';\nimport \"./QuestionScreen.css\";\n//import { useQuery, useMutation  } from '@apollo/client';\n//import { GET_QUIZ_QUESTIONS, SUBMIT_QUIZ } from '../gqlQueries.js';\n //get Questions\n //submit button\n //selection buttons\n\n\nfunction MCQuizScreen() {\n  const [answer,setAnswer]=useState('');\n\n  const handleChange=(e)=>{\n      setAnswer( e.target.value);\n   }\n\n   const onSubmit = async (event) => {\n    alert(\"Submitted!\");\n  }\n\n   return (\n     <div>\n     \n     <h1>MULTIPLE CHOICE QUIZ</h1>\n     <div className=\"chunk\">\n      <h2>What is the meaning of life?</h2>\n        <form>\n            <input type=\"radio\" value=\"A1\" id=\"A1\"\n              onChange={handleChange} name=\"answer\" />\n            <label for=\"A1\">Yes</label>\n\n           <input type=\"radio\" value=\"A2\" id=\"A2\"\n             onChange={handleChange} name=\"answer\"/>\n           <label for=\"A2\">No</label>\n\n           <input type=\"radio\" value=\"A3\" id=\"A3\"\n             onChange={handleChange} name=\"answer\"/>\n           <label for=\"A3\">Maybe</label>\n\n           <input type=\"radio\" value=\"A4\" id=\"A4\"\n             onChange={handleChange} name=\"answer\"/>\n           <label for=\"A4\">I don't know</label>\n        </form>\n        \n        <div>\n            <button onClick = {onSubmit}>Submit</button>\n        </div>\n        </div>\n     </div>\n   );\n}\n\nexport default MCQuizScreen;","import React, { useState } from 'react';\nimport \"./QuestionScreen.css\";\n//var List = require(\"collections/list\");\n\nfunction FillBlank() {\n   //const [answer]=useState('');\n   const [name, setName] = useState('');\n    const onSubmit = async (event) => {\n     alert(\"Submitted!\");\n   }\n\n   const mockdata = [\n     {myname: 'B1'},\n     {myname: 'B1'},\n     {myname: 'B1'}];\n\n   const textMap = (data) => {\n    return data.map(({name}) => (<input type=\"text\" id=\"cname\" name=\"cname\" value={name} onChange={event => setName(event.target.value)}/>));\n   }\n \n    return (\n\n      <div className=\"column\">\n      <h1>FILL-IN-THE-BLANK</h1>\n      <div className=\"chunk\">\n      <h2>There are ___ Corners and ___ sides on a triangle. This is a ___.</h2>\n      <form onSubmit={onSubmit}>\n        <ul>{textMap(mockdata)}</ul>\n        <button type=\"submit\" className=\"submitbutton\">Submit</button>\n      </form>\n      </div>\n    \n    </div>\n    );\n }\n \n export default FillBlank;","import React, { useState } from 'react';\nimport \"./QuestionScreen.css\";\n//var List = require(\"collections/list\");\n\nfunction FreeResponse() {\n   //const [answer]=useState('');\n   const [name, setName] = useState('');\n    \n   const onSubmit = async (event) => {\n     alert(\"Submitted!\");\n   }\n \n    return (\n      <div>\n      <h1>FREE RESPONSE</h1>\n     <div className=\"chunk\">\n     <h2>Write an essay on Shakespeare</h2>\n      <form onSubmit={onSubmit}>\n         \n            <input type=\"text\" id=\"cname\" name=\"cname\" value={name} onChange={event => setName(event.target.value)}/>\n           <button type=\"submit\" className=\"submitbutton\">Submit</button>\n      </form>\n      </div>\n      </div>\n    );\n }\n \n export default FreeResponse;","import React, { useState } from 'react';\nimport \"./QuestionScreen.css\";\n//import { useQuery, useMutation  } from '@apollo/client';\n//import { GET_QUIZ_QUESTIONS, SUBMIT_QUIZ } from '../gqlQueries.js';\n//get Questions\n//submit button\n//selection buttons\n\nfunction MultiSelect() {\n  const [answer,setAnswer]=useState('');\n\n  const handleChange=(e)=>{\n      setAnswer( e.target.value);\n   }\n\n   const onSubmit = async (event) => {\n    alert(\"Submitted!\");\n  }\n\n    return (\n      <div>\n\n        <h1>MULTI-SELECT QUIZ</h1>\n        <div className=\"chunk\">\n          <h2>What is the meaning of life?</h2>\n          <form>\n              <input type=\"checkbox\" value=\"A1\" id=\"A1\"\n                onChange={handleChange} name=\"answer\" />\n              <label for=\"A1\">Yes</label>\n\n             <input type=\"checkbox\" value=\"A2\" id=\"A2\"\n               onChange={handleChange} name=\"answer\"/>\n             <label for=\"A2\">No</label>\n\n             <input type=\"checkbox\" value=\"A3\" id=\"A3\"\n               onChange={handleChange} name=\"answer\"/>\n             <label for=\"A3\">Maybe</label>\n\n             <input type=\"checkbox\" value=\"A4\" id=\"A4\"\n               onChange={handleChange} name=\"answer\"/>\n             <label for=\"A4\">I don't know</label>\n          </form>\n          <div>\n            <button onClick = {onSubmit}>Submit</button>\n          </div>\n        </div>\n     </div>\n   );\n}\n\nexport default MultiSelect;","import React from 'react';\nimport ReactPlayer from 'react-player';\n\nfunction VideoScreen(props) {\n    return (\n      <div >\n         <ReactPlayer url= { props.url } />\n      </div>\n    );\n }\n \n export default VideoScreen;","import React from 'react';\n\nfunction ImageScreen(props) {\n   console.log(props.myurl);\n    return (\n      <div>\n         <img src={props.myurl} />\n      </div>\n    );\n }\n \n export default ImageScreen;","import React from 'react';\nimport './GradeScreen.css';\n\nconst mockData = [\n    {name: 'Learning Target 1', completed : 2, prog : 2, untouched : 1}, \n    {name: 'Learning Target 2', completed : 3, prog : 1, untouched : 0},\n    {name: 'Learning Target 3', completed : 0, prog : 0, untouched : 5},\n    {name: 'Learning Target 4', completed : 6, prog : 8, untouched : 3},\n    {name: 'Learning Target 5', completed : 4, prog : 0, untouched : 0},\n    {name: 'Learning Target 6', completed : 0, prog : 2, untouched : 7},\n    {name: 'Learning Target 7', completed : 2, prog : 8, untouched : 2},\n    {name: 'Learning Target 8', completed : 0, prog : 2, untouched : 0}];\n\nfunction getLineStyle(width, color) {\n    return {\n        height: '5px',\n        width: (width > 5 ? (width - 5) : width) + 'px',\n        color: color,\n        backgroundColor: color,\n        border: '1px solid white'\n    };\n}\n\n\n export function LearningTarget(props) {\n    const width = 200;\n    const height = 200;\n    const total = props.completed + props.prog + props.untouched;\n\n    const bookStyle = {\n        width: width.toString() + 'px',\n        height: height.toString() + 'px',\n        margin: '8px'\n    };\n    const cLineStyle = getLineStyle(\n        (width * (props.completed/total)).toString(), 'green');\n    const pLineStyle = getLineStyle(\n        (width * (props.prog/total)).toString(), 'orange');\n    const uLineStyle = getLineStyle(\n        (width * (props.untouched/total)).toString(), 'red');\n\n    return(\n        <div className='learningtarget' data-testid={ props.name } \n        style={ bookStyle }>\n            <h3>{props.name}</h3>\n            <hr style={ cLineStyle }/>\n            <hr style={ pLineStyle }/>\n            <hr style={ uLineStyle }/>\n        </div>\n    );\n}\n\nexport default function GradeScreen() {\n    const learningTargets = mockData.map(lt => {\n        return(\n            <LearningTarget\n            key = {lt.name}\n            name = {lt.name}\n            completed = {lt.completed}\n            prog = {lt.prog}\n            untouched = {lt.untouched}\n            />\n        );\n    })\n    return(\n        <div>\n            <h1>GradeBook</h1>\n            <div className='gradescreen-grid'>\n                { learningTargets }\n            </div>\n        </div>\n    );\n}\n","import React from 'react';\n\nexport function TextTask(props) {\n    return(\n    <div>\n        <h3>{props.text}</h3>\n    </div>\n    );\n}\n","import React, { useState } from 'react';\nimport './ProgressBar.css'\n\nexport default function ProgressBar(props) {\n    const width = (props.width ? parseInt(props.width, 10) : 700);\n    const height = (props.height ? parseInt(props.height, 10) : 10);\n    const doneColor = (props.doneColor ? props.doneColor : 'blue');\n    const leftColor = (props.leftColor ? props.leftColor : 'gray');\n\n    var total = 10;\n    if(props.total) {\n        total = props.total.toString();\n    } else {\n        console.warn('Total missing, default value of 10 being used');\n    }\n    const totalNum = total;\n    var done = 1;\n    if(props.done) {\n        done = props.done.toString();\n    } else {\n        console.warn('Done missing, default value of 1 being used');\n    }\n    const doneNum = done;\n\n\n    const barStyle = {\n        'width' : width.toString() + 'px'\n    }\n\n\n    function getDone() {\n        const style = {\n            'color' : doneColor,\n            'backgroundColor' : doneColor,\n            'height' : height.toString() + 'px',\n            'width' : (doneNum/totalNum * width).toString() + 'px',\n            'border' : '1px solid navy',\n            'border-top-left-radius' : '10px',\n            'border-bottom-left-radius' : '10px'\n        }\n        return(\n            <hr style = {style}></hr>\n        );\n    }\n\n    function getLeft() {\n        const style = {\n            'color' : leftColor,\n            'backgroundColor' : leftColor,\n            'height' : height.toString() + 'px',\n            'width' : ((totalNum-doneNum)/(totalNum) * width).toString() + 'px',\n            'border' : '1px solid navy',\n            'border-top-right-radius' : '10px',\n            'border-bottom-right-radius' : '10px'\n        }\n        return(\n            <hr style = {style}></hr>\n        );\n    }\n\n    return(\n        <div className='pbar' style = {barStyle}>\n            { getDone() }\n            { getLeft() }\n        </div>\n    );\n}","import { useQuery, useMutation  } from '@apollo/client';\nimport { useState } from 'react';\nimport { GET_TASK } from '../gqlQueries.js';\nimport { TextTask } from './Text.js';\nimport ImageScreen from './ImageScreen.js';\nimport VideoScreen from './VideoScreen.js';\nimport ProgressBar from './ProgressBar.js';\nimport './Task.css';\n\nfunction Task() {\n  const { loading, error, data, refetch} = useQuery(GET_TASK, {\n    variables: { id: \"4f681550ba9\" },\n  });\n\n  const [pageNo, setPageNo] = useState(0);\n  const [pDone, setPDone] = useState(1);\n\n  if(loading) return (\n    <div className = 'tasks'> \n      <p>Loading...</p>\n    </div>\n  )\n\n  if(error){\n    console.log(error);\n    return (\n      <div className = 'tasks'> \n        <p>Error!</p>\n      </div>\n    );\n  }\n\n  const pages = data.task.pages;\n  const title = data.task.name;\n  const pTotal = pages.length;\n\n  const addPage = () => {\n    if(pageNo < pages.length - 1) {\n      setPageNo(pageNo + 1);\n      setPDone(pDone + 1);\n    }\n  }\n\n  const subPage = () => {\n    if(pageNo > 0) {\n      setPageNo(pageNo - 1);\n      setPDone(pDone - 1);\n    }\n  }\n\n  const submitTask = () => {\n    alert(`${title} submitted.`);\n  }\n\n  function renderHeader() {\n    return(\n      <div className='header'>\n        { renderPrevButton() }\n        <h1>{ title }</h1>\n        { renderAddButton() }\n        { renderSubmitButton() }\n      </div>\n    \n    );\n  }\n\n  function renderPrevButton() {\n    if(pageNo > 0) {\n      return (<button onClick= { () => subPage() }>Prev Page</button>);\n    }\n  }\n\n  function renderAddButton() {\n    if(pageNo < pages.length - 1) {\n      return (<button onClick = { () => addPage() }>Next Page</button>);\n    }\n  }\n\n  function renderSubmitButton() {\n    if(pageNo === pages.length - 1) {\n      return (<button onClick = { () => submitTask() }>Submit</button>);\n    }\n  }\n\n  function renderPage() {\n    const page = pages[pageNo];\n\n    if(!page) return <div></div>\n\n    const blockElements = [];\n    page.blocks.forEach(blck => {\n      if(blck.__typename === 'TextBlock') {\n        blockElements.push(<TextTask text = {blck.contents}/>);\n      }\n      else if(blck.__typename === 'ImageBlock') {\n        blockElements.push(<ImageScreen myurl = {blck.imageUrl}/>);\n      }\n      else if(blck.__typename === 'VideoBlock') {\n        blockElements.push(<VideoScreen url = {blck.videoUrl}/>);\n      }\n      else{\n        console.error('Invalid type or wrongly formatted input.');\n        console.log(blck);\n      }\n    });\n\n    return(\n      <div className='page'>\n        { blockElements }\n      </div>\n    );\n  }\n\n  return (\n    <div className = 'tasks'> \n      { renderHeader() }\n      { renderPage() }\n      <ProgressBar \n        width='700'\n        height='10'\n        doneColor='#4274F3'\n        leftColor='rgb(108, 108, 133)'\n        total={pTotal}\n        done={pDone}\n      />\n    </div>\n  );\n}\n\nexport default Task;","import React, { useEffect, useState } from 'react';\nimport Amplify, { Auth, Hub } from 'aws-amplify';\nimport { ApolloProvider } from '@apollo/client';\nimport { ApolloClient, InMemoryCache } from '@apollo/client';\nimport {Route, Switch} from 'react-router-dom';\nimport { useHistory } from 'react-router';\nimport \"./App.css\";\nimport CourseScreen from './Components/CourseScreen.js';\nimport GoalsScreen from './Components/GoalsScreen.js';\nimport MCQuizScreen from './Components/MCQuizScreen.js';\nimport FillBlank from './Components/FillBlank.js';\nimport FreeResponse from './Components/FreeResponse.js';\nimport MultiSelect from './Components/MultiSelect.js';\nimport VideoScreen from './Components/VideoScreen.js';\nimport ImageScreen from './Components/ImageScreen.js';\nimport GradeScreen from './Components/GradeScreen';\nimport Task from './Components/Task';\n\nconst HOME_SCREEN_PATH = 'task';\n\nAmplify.configure({\n  Auth: {\n      identityPoolId: process.env.REACT_APP_IDENTITY_POOL_ID,\n      region: process.env.REACT_APP_REGION,\n      userPoolId: process.env.REACT_APP_USER_POOL_ID,\n      userPoolWebClientId: process.env.REACT_APP_USER_POOL_WEB_CLIENT_ID,\n      oauth: {\n        domain: process.env.REACT_APP_DOMAIN,\n        scope: [process.env.REACT_APP_SCOPE_A, process.env.REACT_APP_SCOPE_B, process.env.REACT_APP_SCOPE_C, \n          process.env.REACT_APP_SCOPE_D, process.env.REACT_APP_SCOPE_E],\n        redirectSignIn: process.env.REACT_APP_REDIRECT_SIGNIN,\n        redirectSignOut: process.env.REACT_APP_REDIRECT_SIGNOUT,\n        responseType: process.env.REACT_APP_RESPONSE_TYPE\n      }\n  }\n});\n\nfunction App() {\n  const [accessToken, setAccessToken] = useState(null);\n  const hist = useHistory();\n\n  const refreshCredentials = () => {\n    return Auth.currentSession()\n    .then(session => {\n      setAccessToken(session.getAccessToken());\n    })\n    .catch(() => console.log('not signed in'));\n  }\n\n  const client = new ApolloClient({\n    uri: process.env.REACT_APP_PROD_URI,\n    cache: new InMemoryCache(),\n    headers: {\n      authorization: accessToken == null? null : accessToken.getJwtToken(),\n    }\n  });\n\n  const LoginComponent = () => {\n  \n    if(accessToken) hist.push(HOME_SCREEN_PATH)\n\n    return (\n      <div>\n        <button onClick={() => Auth.federatedSignIn()}>Sign In</button>\n      </div>\n    );\n  }\n\n  const login = (token) => {\n    setAccessToken(token);\n    hist.push({\n      pathname:HOME_SCREEN_PATH\n    });\n  }\n\n  const logout = () => {\n    setAccessToken(null);\n    hist.push({\n      pathname:'/'\n    });\n  }\n\n  useEffect(() => {\n    Hub.listen('auth', ({ payload: { event, data } }) => {\n      switch (event) {\n        case 'signIn':\n        case 'cognitoHostedUI':\n          login(data.signInUserSession.getAccessToken());\n          console.log('Successful Sign In.');\n          console.log(data);\n          break;\n        case 'signUp':\n          login(data.signInUserSession.getAccessToken());\n          console.log('user signed up');\n          break;\n        case 'signOut':\n          logout();\n          break;\n        case 'signIn_failure':\n          console.log('Sign In Failure.');\n          break;\n        case 'cognitoHostedUI_failure':\n          console.log('Sign in failure', data);\n          break;\n      }\n    });\n    refreshCredentials();\n  }, []);\n\n  return (\n    <div>\n      <p className=\"navbar\">\n        <p className=\"title\">flipt.ED</p>\n\n        {accessToken == null? <li><a onClick={() => Auth.federatedSignIn()}>Sign In</a></li> :\n        \n        <div>\n        <li><a onClick={() => Auth.signOut()}>Sign Out</a></li>  \n        <li><a href=\"/goalsscreen\">Goals</a></li>\n        <li><a href=\"/mcquizscreen\">MC Quiz</a></li>\n        <li><a href=\"/FillBlank\">Fill-in-the-Blank</a></li> \n        <li><a href=\"/FreeResponse\">Free Response</a></li> \n        <li><a href=\"/MultiSelect\">Multi-Select</a></li> \n        <li><a href=\"/VideoScreen\">Video</a></li> \n        <li><a href=\"/ImageScreen\">Image</a></li> \n        <li><a href=\"/gradescreen\">Grades</a></li> \n        <li><a href=\"/task\">Task</a></li>  \n        <li><a href=\"/coursescreen\">Courses</a></li>      \n        </div>}\n      </p>\n      \n      \n      \n      \n      <ApolloProvider client={client}>\n\n        <div>\n        <Switch>\n          <Route component = {LoginComponent} exact path = '/'/>\n          <Route component = {CourseScreen} exact path = '/coursescreen'/>\n          <Route component = {GoalsScreen} exact path = '/goalsscreen'/>\n          <Route component = {MCQuizScreen} exact path = '/mcquizscreen'/>\n          <Route component = {FillBlank} exact path = '/FillBlank'/>\n          <Route component = {FreeResponse} exact path = '/FreeResponse'/>\n          <Route component = {MultiSelect} exact path = '/MultiSelect'/>\n          <Route component = {VideoScreen} exact path = '/VideoScreen'/>\n          <Route component = {ImageScreen} exact path = '/ImageScreen'/>\n          <Route component = {GradeScreen} exact path = '/gradescreen'/>\n          <Route component = {Task} exact path = '/task'/>\n        </Switch>\n        </div>\n      </ApolloProvider>\n    </div>\n  );\n}\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}